version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: task-management-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanagement
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=8000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/taskmanagement
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-management-frontend
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data: